<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxStudent.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>